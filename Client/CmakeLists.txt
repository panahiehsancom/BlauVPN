#project(ClientBlauVPN)
#
#cmake_minimum_required(VERSION 3.21)
#
#
#set(CMAKE_CXX_STANDARD 14)
#set(CMAKE_CXX_STANDARD_REQUIRED ON)
#set(CMAKE_CXX_EXTENSIONS OFF)
#
#set(BOOST_ROOT "C:/libs/boost/boost_1_76_0") # either set it here or from the command line
#
#if (NOT DEFINED BOOST_ROOT)
#    set(BOOST_ROOT "C:/libs/boost/boost_1_76_0" CACHE PATH "Installation prefix of the boost library")
#endif (NOT DEFINED BOOST_ROOT)
#
#set(Boost_USE_STATIC_LIBS OFF)
#set(Boost_USE_MULTITHREADED ON)
#set(Boost_USE_STATIC_RUNTIME OFF)
#
#find_package(Boost COMPONENTS "chrono" "regex" "thread" REQUIRED)
#
#if(Boost_FOUND)
#
#    include_directories(${Boost_INCLUDE_DIR})
#
#    add_executable(${CMAKE_PROJECT_NAME} main.cpp)
#
#endif()

cmake_minimum_required(VERSION 3.21)
project(test)

if (WIN32)

set(BOOST_ROOT "c:/libs/boost/boost_1_55_0/stage/lib/")
set(Boost_USE_STATIC_LIBS ON)
set(Boost_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)

find_package(Boost COMPONENTS system REQUIRED)
add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++")

include_directories(${Boost_INCLUDE_DIR})


set(SOURCE_FILES main.cpp)
add_executable(test ${SOURCE_FILES})

target_link_libraries(test ${Boost_LIBRARIES})

endif (WIN32)
